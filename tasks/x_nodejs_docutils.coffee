###
x-nodejs-docutils

Gruntplugin to work with docutils on NodeJS

Copyright (c) 2014 
Licensed under the GPLv3 license.

Objective
	- Use grunt to manage docutils building
	- Goal is not so much as to perform file transformation--that is easy,
		but to build one or more document corpusses from a set of source files;
		using different configurations, using different external services or 
		completely stand alone.

Some considerations 
	Metadata 
		filename: easy to work with
		contents: difficult but best user-experience; e.g. override defaults
		dynamic: parameters during building affect target set; defaults or settings provided by build-time services (such as the document includes, its encoding, user-defined params or those generated by more specialized hypertext services such as for citation or cross-references indexing.

Standalone Documents
	- one or more src files, may yield one main standalone and includes.
	- for standalone builds use stock-docutils and strike included files from target list
	- but still such targets may be build if wanted..

Options
	src-format detect from ext or explicit mapping
	target-format detect from ext or explicit mapping

Preliminary conclusions
	- using files key in multitasks configs allows utilizing 'newer' task
	- not yet into watch 
	  perhaps that can help to configure to build different documents
	  and rebuild these as some intermediate watches are rebuild
	  Ie. grunt watch is a grunt server of sorts started by the user
	- it looks like watching parameters for conditional builds is too hard to do without
	  having a supplementary system to watch which resources make up what




htdocs:standalone
	files: build/doc / ** / *.standalone.xhtml

###

htdocsTasks = require '../lib/htdocsTasks'

"use strict"

module.exports = (grunt) ->

	grunt.registerMultiTask "x_nodejs_docutils", ".", ->
		
		hlpr = new htdocsTasks()

		opts = @options()
		if opts.standalone
			@files.forEach (filerule)->

				console.log filerule
				if filerule.dest
					ext = filerule.orig.ext
					opts.target_format = ext.slice(1)
				console.log "Building #{filerule.dest} from #{filerule.src[0]} with #{opts.target_format} "
				#hlpr.build_standalone filerule.src[0]
		# Build standalone documents first, then get onto more sophisticated
		# build rules

		#grunt.util.spawn(
		#	cmd: 'python '
		#	args: ['']
		#)

